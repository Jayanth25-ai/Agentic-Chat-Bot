{"ast":null,"code":"import axios from 'axios';\nconst TOKEN_KEY = 'ai_chatbot_token';\nexport function setToken(token) {\n  localStorage.setItem(TOKEN_KEY, token);\n}\nexport function getToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function logout() {\n  localStorage.removeItem(TOKEN_KEY);\n}\nexport const api = axios.create({\n  baseURL: '/api'\n});\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});","map":{"version":3,"names":["axios","TOKEN_KEY","setToken","token","localStorage","setItem","getToken","getItem","logout","removeItem","api","create","baseURL","interceptors","request","use","config","headers","Authorization"],"sources":["D:/CHAT-BOT/frontend/src/lib/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst TOKEN_KEY = 'ai_chatbot_token';\r\n\r\nexport function setToken(token) {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport const api = axios.create({\r\n  baseURL: '/api',\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,kBAAkB;AAEpC,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;EAC9BC,YAAY,CAACC,OAAO,CAACJ,SAAS,EAAEE,KAAK,CAAC;AACxC;AAEA,OAAO,SAASG,QAAQA,CAAA,EAAG;EACzB,OAAOF,YAAY,CAACG,OAAO,CAACN,SAAS,CAAC;AACxC;AAEA,OAAO,SAASO,MAAMA,CAAA,EAAG;EACvBJ,YAAY,CAACK,UAAU,CAACR,SAAS,CAAC;AACpC;AAEA,OAAO,MAAMS,GAAG,GAAGV,KAAK,CAACW,MAAM,CAAC;EAC9BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMb,KAAK,GAAGG,QAAQ,CAAC,CAAC;EACxB,IAAIH,KAAK,EAAE;IACTa,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUf,KAAK,EAAE;EAClD;EACA,OAAOa,MAAM;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}