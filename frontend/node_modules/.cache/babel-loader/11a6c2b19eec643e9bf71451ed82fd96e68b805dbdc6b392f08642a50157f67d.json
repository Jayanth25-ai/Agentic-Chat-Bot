{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHAT-BOT\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../lib/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (token) {\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await api.get('/api/auth/profile');\n      if (response.data.success) {\n        setUser(response.data.data.user);\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data.data;\n        setUser(user);\n        setToken(token);\n        localStorage.setItem('token', token);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.post('/api/auth/register', userData);\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data.data;\n        setUser(user);\n        setToken(token);\n        localStorage.setItem('token', token);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || 'Registration failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    setError(null);\n  };\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      const response = await api.put('/api/auth/profile', profileData);\n      if (response.data.success) {\n        setUser(response.data.data.user);\n        return {\n          success: true,\n          user: response.data.data.user\n        };\n      } else {\n        throw new Error(response.data.message || 'Profile update failed');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Profile update failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      setError(null);\n      const response = await api.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.data.message || 'Password change failed');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message || 'Password change failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const clearError = () => setError(null);\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MnZ1gf6topGIrm8sy6EanQsoAnU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","checkAuthStatus","response","get","data","success","logout","console","login","email","password","post","setItem","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","removeItem","updateProfile","profileData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","clearError","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CHAT-BOT/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../lib/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      checkAuthStatus();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await api.get('/api/auth/profile');\r\n      if (response.data.success) {\r\n        setUser(response.data.data.user);\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/api/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        const { user, token } = response.data.data;\r\n        setUser(user);\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        return { success: true, user };\r\n      } else {\r\n        throw new Error(response.data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Login failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/api/auth/register', userData);\r\n      \r\n      if (response.data.success) {\r\n        const { user, token } = response.data.data;\r\n        setUser(user);\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        return { success: true, user };\r\n      } else {\r\n        throw new Error(response.data.message || 'Registration failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Registration failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    setError(null);\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.put('/api/auth/profile', profileData);\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.data.user);\r\n        return { success: true, user: response.data.data.user };\r\n      } else {\r\n        throw new Error(response.data.message || 'Profile update failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Profile update failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.put('/api/auth/change-password', {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        return { success: true };\r\n      } else {\r\n        throw new Error(response.data.message || 'Password change failed');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Password change failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    clearError,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}